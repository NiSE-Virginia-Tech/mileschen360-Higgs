import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;


public class SecurityClassExtractor {

	private static Pattern p = Pattern.compile("\\$[0-9]+");
	public static void main(String[] args) throws Exception {
		BufferedWriter writer = new BufferedWriter(new FileWriter("namelist.txt"));
		File folder = new File("/home/nm8247/Software/fromFelix/rtholmes-inconsistencyinspectorresources-1590df8efa86/security_apis");
		File[] listOfFiles = folder.listFiles();
		for (int i = 0; i < listOfFiles.length; i++) {
			File f = listOfFiles[i];
			if (f.isFile()) {
				ZipInputStream zip = new ZipInputStream(new FileInputStream(f));
				for (ZipEntry entry = zip.getNextEntry(); entry != null; entry = zip.getNextEntry()) {
					visit(entry, writer);					
				}
				zip.close();
			}
		}
		writer.close();
	}
	
	private static void visit(ZipEntry entry, BufferedWriter writer) throws IOException {
		String name = entry.getName();
		String className = null;
		if (name.endsWith(".class")) {
			className = name.replace("/", ".").replaceAll(".class", "");
			Matcher matcher = p.matcher(className);
//			if (matcher.find()) { //It seems that the className generated by JavaBaker can contain $1
//			   className = className.substring(0, className.indexOf(matcher.group()));
//			} else {
//				className = className.replaceAll("\\$", ".");//It seems that the className generated by JavaBaker can contain $
//			}
			writer.write(className + "\n");
		} else if (name.endsWith(".java")) {
			className = name.replace("/", ".").replaceAll(".java", "");
			writer.write(className + "\n");
		}
		
	}
}
